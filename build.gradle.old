plugins {
	id 'java'
	id "com.modrinth.minotaur" version "2.+" apply false
	id 'net.darkhax.curseforgegradle' version '1.1.15' apply false
}

allprojects {
	version = project.mod_version
	group = project.maven_group
}

subprojects {
	apply plugin: 'java'
	
	versionNumber = "${mod_version}" // You don't need to set this manually. Will fail if Modrinth has this version already
	versionType = "release" // This is the default -- can also be `beta` or `alpha`
	uploadFile = remapJar // With Loom, this MUST be set to `remapJar` instead of `jar`!
	gameVersions = ["1.20.1"] // Must be an array, even with only one version
	loaders = ["fabric"] // Must also be an array - no need to specify this if you're using Loom or ForgeGradle
	changelog = file("changelog.md").text
	versionName = "RoadWeaver ${mod_version}" // This is the name of the version that will be displayed on Modrinth
	dependencies {
		embedded.project "midnightlib" // Declare midnightlib as an embedded dependency
	}
}

// Define tasks
tasks.register("curseforge", TaskPublishCurseForge) {
	apiToken = System.getenv("CURSEFORGE_TOKEN")
	def projectId = "1140708"

	def mainFile = upload(projectId, remapJar)
	mainFile.changelog = file("changelog.md")
	mainFile.changelogType = "markdown"
	mainFile.displayName = "RoadWeaver ${mod_version}"
	mainFile.releaseType = "release"

	mainFile.addEmbedded("midnightlib")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}